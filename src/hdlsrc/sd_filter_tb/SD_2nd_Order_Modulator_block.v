// -------------------------------------------------------------
// 
// File Name: hdlsrc\sd_filter_tb\SD_2nd_Order_Modulator_block.v
// Created: 2022-12-05 10:44:11
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SD_2nd_Order_Modulator_block
// Source Path: sd_filter_tb/SD 2nd Order Modulator/SD 2nd Order Modulator
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SD_2nd_Order_Modulator_block
          (clk,
           reset,
           enb,
           in,
           out);


  input   clk;
  input   reset;
  input   enb;
  input   signed [46:0] in;  // sfix47_En22
  output  out;


  wire Constant3_out1;
  wire Constant2_out1;
  wire signed [46:0] Sum10_out1;  // sfix47_En22
  reg signed [46:0] Unit_Delay4_out1;  // sfix47_En22
  wire Switch1_out1;
  wire signed [15:0] SD_Mux_out1;  // sfix16_En7
  wire signed [46:0] Sum5_sub_cast;  // sfix47_En22
  wire signed [46:0] Sum5_out1;  // sfix47_En22
  wire signed [46:0] Sum11_sub_cast;  // sfix47_En22
  wire signed [46:0] Sum11_out1;  // sfix47_En22
  reg signed [46:0] Unit_Delay5_out1;  // sfix47_En22
  wire signed [46:0] Sum12_out1;  // sfix47_En22
  wire switch_compare_1;


  assign Constant3_out1 = 1'b0;



  assign Constant2_out1 = 1'b1;



  always @(posedge clk or posedge reset)
    begin : Unit_Delay4_process
      if (reset == 1'b1) begin
        Unit_Delay4_out1 <= 47'sh000000000000;
      end
      else begin
        if (enb) begin
          Unit_Delay4_out1 <= Sum10_out1;
        end
      end
    end



  SD_Mux u_SD_Mux (.in1(Switch1_out1),
                   .out1(SD_Mux_out1)  // sfix16_En7
                   );

  assign Sum5_sub_cast = {{16{SD_Mux_out1[15]}}, {SD_Mux_out1, 15'b000000000000000}};
  assign Sum5_out1 = in - Sum5_sub_cast;



  assign Sum10_out1 = Sum5_out1 + Unit_Delay4_out1;



  assign Sum11_sub_cast = {{16{SD_Mux_out1[15]}}, {SD_Mux_out1, 15'b000000000000000}};
  assign Sum11_out1 = Sum10_out1 - Sum11_sub_cast;



  assign Sum12_out1 = Sum11_out1 + Unit_Delay5_out1;



  always @(posedge clk or posedge reset)
    begin : Unit_Delay5_process
      if (reset == 1'b1) begin
        Unit_Delay5_out1 <= 47'sh000000000000;
      end
      else begin
        if (enb) begin
          Unit_Delay5_out1 <= Sum12_out1;
        end
      end
    end



  assign switch_compare_1 = Unit_Delay5_out1 > 47'sh000000000000;



  assign Switch1_out1 = (switch_compare_1 == 1'b0 ? Constant3_out1 :
              Constant2_out1);



  assign out = Switch1_out1;

endmodule  // SD_2nd_Order_Modulator_block

