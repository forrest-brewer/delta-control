// -------------------------------------------------------------
// 
// File Name: hdlsrc\sd_filter_tb\SD_Filter.v
// Created: 2022-12-05 10:44:11
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SD_Filter
// Source Path: sd_filter_tb/SD 2nd Order Modulator/SD Filter
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SD_Filter
          (clk,
           reset,
           enb,
           input_rsvd,
           feedback,
           output_rsvd);


  input   clk;
  input   reset;
  input   enb;
  input   input_rsvd;
  input   feedback;
  output  signed [46:0] output_rsvd;  // sfix47_En22


  wire signed [46:0] Constant1_out1;  // sfix47_En22
  wire signed [1:0] Constant_out1;  // sfix2_En1
  wire signed [24:0] node_5_out1;  // sfix25
  wire signed [32:0] node_4_out1;  // sfix33_En8
  wire signed [32:0] node_3_out1;  // sfix33_En8
  wire signed [23:0] SD_Mux8_out1;  // sfix24_En22
  wire signed [46:0] Sum8_stage2_add_cast;  // sfix47_En22
  wire signed [46:0] Sum8_stage2_add_temp;  // sfix47_En22
  wire signed [47:0] Sum8_op_stage1;  // sfix48_En22
  wire signed [32:0] node_2_out1;  // sfix33_En8
  wire signed [65:0] Gain3_out1;  // sfix66_En63
  wire signed [46:0] Sum8_stage3_add_cast;  // sfix47_En22
  wire signed [46:0] Sum8_stage3_add_cast_1;  // sfix47_En22
  wire signed [46:0] Sum8_out1;  // sfix47_En22


  assign Constant1_out1 = 47'sh000000000000;



  assign Constant_out1 = 2'sb00;



  node_5 u_node_5 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .input_rsvd(input_rsvd),
                   .node_in(Constant_out1),  // sfix2_En1
                   .feedback(feedback),
                   .node_out(node_5_out1)  // sfix25
                   );

  node_4 u_node_4 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .input_rsvd(input_rsvd),
                   .node_in(node_5_out1),  // sfix25
                   .feedback(feedback),
                   .node_out(node_4_out1)  // sfix33_En8
                   );

  node_3 u_node_3 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .input_rsvd(input_rsvd),
                   .node_in(node_4_out1),  // sfix33_En8
                   .feedback(feedback),
                   .node_out(node_3_out1)  // sfix33_En8
                   );

  SD_Mux8 u_SD_Mux8 (.in1(input_rsvd),
                     .out1(SD_Mux8_out1)  // sfix24_En22
                     );

  assign Sum8_stage2_add_cast = {{23{SD_Mux8_out1[23]}}, SD_Mux8_out1};
  assign Sum8_stage2_add_temp = Constant1_out1 + Sum8_stage2_add_cast;
  assign Sum8_op_stage1 = {Sum8_stage2_add_temp[46], Sum8_stage2_add_temp};



  node_2 u_node_2 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .input_rsvd(input_rsvd),
                   .node_in(node_3_out1),  // sfix33_En8
                   .feedback(feedback),
                   .node_out(node_2_out1)  // sfix33_En8
                   );

  assign Gain3_out1 = {{2{node_2_out1[32]}}, {node_2_out1, 31'b0000000000000000000000000000000}};



  assign Sum8_stage3_add_cast = Sum8_op_stage1[46:0];
  assign Sum8_stage3_add_cast_1 = {{22{Gain3_out1[65]}}, Gain3_out1[65:41]};
  assign Sum8_out1 = Sum8_stage3_add_cast + Sum8_stage3_add_cast_1;



  assign output_rsvd = Sum8_out1;

endmodule  // SD_Filter

